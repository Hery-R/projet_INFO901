"""
Launcher.py - Point d'entr√©e principal du syst√®me distribu√©
Auteur: RASOAMIARAMANANA Hery ny aina

Ce module lance et coordonne l'ex√©cution de plusieurs processus
dans un syst√®me distribu√© simul√© avec horloges de Lamport.
"""

from time import sleep
from Process import Process

def launch(nbProcess, runningTime=5):
    """
    Lance un syst√®me distribu√© avec plusieurs processus.
    
    Args:
        nbProcess (int): Nombre de processus √† cr√©er (ex: 3 pour P0, P1, P2)
        runningTime (int): Dur√©e d'ex√©cution en secondes
    """
    print(f"üöÄ Lancement de {nbProcess} processus pour {runningTime} secondes...")
    
    # Cr√©ation et d√©marrage de tous les processus
    processes = []
    for i in range(nbProcess):
        process_name = "P" + str(i)
        processes.append(Process(process_name, nbProcess))
        print(f"‚úÖ Processus {process_name} cr√©√© (ID: {i})")
    
    print(f"‚è±Ô∏è  Simulation en cours pendant {runningTime} secondes...\n")
    
    # Attendre la dur√©e sp√©cifi√©e
    sleep(runningTime)
    
    print(f"\nüõë Arr√™t programm√© apr√®s {runningTime} secondes")
    
    # Arr√™ter tous les processus
    for p in processes:
        p.stop()
    
    # Attendre que tous les threads se terminent proprement
    for p in processes:
        p.waitStopped()
    
    print("‚úÖ Tous les processus sont arr√™t√©s")

if __name__ == '__main__':
    # Configuration par d√©faut : 3 processus pendant 5 secondes
    launch(nbProcess=3, runningTime=5)
