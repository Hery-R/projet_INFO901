"""
Launcher.py - Point d'entr√©e principal du syst√®me distribu√©
Auteur: RASOAMIARAMANANA Hery ny aina

Ce module lance et coordonne l'ex√©cution de plusieurs processus
dans un syst√®me distribu√© simul√© avec horloges de Lamport.
"""

from time import sleep
from Process import Process
from Com import Com
from MessageDistributor import get_message_distributor, shutdown_message_distributor
from ProcessIDManager import reset_process_id_manager


def launch(nbProcess, runningTime=5):
    """
    Lance un syst√®me distribu√© avec plusieurs processus.

    Args:
        nbProcess (int): Nombre de processus √† cr√©er (ex: 3 pour P0, P1, P2)
        runningTime (int): Dur√©e d'ex√©cution en secondes
    """
    print(
        f"üöÄ Lancement de {nbProcess} processus pour {runningTime} secondes...")

    # Reset de la num√©rotation pour garantir que √ßa commence √† 0
    reset_process_id_manager()

    # Initialiser la synchronisation globale
    Com.initialize_sync(nbProcess)

    # Initialiser le distributeur de messages
    distributor = get_message_distributor()

    # Cr√©ation et d√©marrage de tous les processus avec num√©rotation automatique
    processes = []
    for i in range(nbProcess):
        # Les processus re√ßoivent automatiquement leur num√©ro (0, 1, 2...)
        # Plus besoin de sp√©cifier l'ID manuellement - num√©rotation automatique !
        # Num√©rotation automatique cons√©cutive
        process = Process(npProcess=nbProcess)
        processes.append(process)
        print(
            f"‚úÖ Processus {process.myProcessName} cr√©√© avec ID automatique: {process.myId}")

    print(f"‚è±Ô∏è  Simulation en cours pendant {runningTime} secondes...\n")

    # Attendre la dur√©e sp√©cifi√©e
    sleep(runningTime)

    print(f"\nüõë Arr√™t programm√© apr√®s {runningTime} secondes")

    # Arr√™ter tous les processus
    for p in processes:
        p.stop()

    # Attendre que tous les threads se terminent proprement
    for p in processes:
        p.waitStopped()

    # Arr√™ter le distributeur de messages
    shutdown_message_distributor()

    print("‚úÖ Tous les processus sont arr√™t√©s")


if __name__ == '__main__':
    # Configuration par d√©faut : 3 processus pendant 5 secondes
    launch(nbProcess=3, runningTime=5)
